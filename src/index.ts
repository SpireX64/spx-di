export { default as DIContainer, DIContainerBuilder } from './DIContainer'
export { isPhantomInstance } from './internal/PhantomInstance'
export { default as Lifecycle } from './Lifecycle'
export { DIError, DIErrorType } from './DIError'
export { DIModule } from './modules/DIModule'
export type { TStaticDIModule, TDynamicDIModule, TModuleKey, TypeMapOfDIModule } from './modules/DIModule'
export type { TypeMapOfContainer } from './DIContainer'
export type { TProvider, TScopeKey, TInstanceFactory, IDisposable, IScopeDisposable, TConflictResolution, TBindingName, TBindingOptions } from './types'
export type { default as ITypeBinding, checkIsAvailableInScope } from './abstract/ITypeBinding'
export type { default as IDependencyResolver } from './abstract/IDependencyResolver'
